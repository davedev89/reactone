{"ast":null,"code":"var _jsxFileName = \"/home/daviddc/personalProjects/react/reactone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TodoCounter } from './TodoCounter';\nimport { TodoSearch } from './TodoSearch';\nimport { TodoList } from './TodoList';\nimport { TodoItem } from './TodoItem';\nimport { CreateTodoButton } from './CreateTodoButton'; //import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTodos = [{\n  text: 'Cortar cebolla',\n  completed: true\n}, {\n  text: 'Tomar curso',\n  completed: false\n}, {\n  text: 'Correr',\n  completed: false\n}];\n\nfunction App(props) {\n  _s();\n\n  const [todos, setTodos] = React.useState(defaultTodos);\n  const [searchValue, setSearchValue] = React.useState(''); // esto me permite darle un estado. El array recibe un valor y tambien una funcion para setear el valor\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodos = text => {\n    const todoIndex = todos.findIndex(todo => todo.text == text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n      total: totalTodos,\n      completed: completedTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) //cuando renderizo distintos elementos dentro de un componente, React necesita que le agregue una key a esos componentes, que es la parte que va a cambiar entre uno y otro\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"OGMHQXAjvuOGZdqUUooJQ35j+r8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/daviddc/personalProjects/react/reactone/src/App.js"],"names":["React","TodoCounter","TodoSearch","TodoList","TodoItem","CreateTodoButton","defaultTodos","text","completed","App","props","todos","setTodos","useState","searchValue","setSearchValue","completedTodos","filter","todo","length","totalTodos","searchedTodos","todoText","toLowerCase","searchText","includes","completeTodos","todoIndex","findIndex","newTodos","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,gBAAR,QAA+B,oBAA/B,C,CAEA;;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAACC,EAAAA,IAAI,EAAE,gBAAP;AAAyBC,EAAAA,SAAS,EAAE;AAApC,CADmB,EAEnB;AAACD,EAAAA,IAAI,EAAE,aAAP;AAAsBC,EAAAA,SAAS,EAAE;AAAjC,CAFmB,EAGnB;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,SAAS,EAAE;AAA5B,CAHmB,CAArB;;AAOA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAElB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAeP,YAAf,CAA1B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCf,KAAK,CAACa,QAAN,CAAe,EAAf,CAAtC,CAHkB,CAGuC;;AAEzD,QAAMG,cAAc,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAI,CAAC,CAACA,IAAI,CAACV,SAA5B,EAAuCW,MAA9D;AACA,QAAMC,UAAU,GAAGT,KAAK,CAACQ,MAAzB;AAEA,MAAIE,aAAa,GAAG,EAApB;;AAEA,MAAG,CAACP,WAAW,CAACK,MAAb,IAAuB,CAA1B,EAA6B;AAC3BE,IAAAA,aAAa,GAAGV,KAAhB;AACD,GAFD,MAEO;AAELU,IAAAA,aAAa,GAAGV,KAAK,CAACM,MAAN,CAAcC,IAAI,IAAI;AAEpC,YAAMI,QAAQ,GAAGJ,IAAI,CAACX,IAAL,CAAWgB,WAAX,EAAjB;AACA,YAAMC,UAAU,GAAGV,WAAW,CAAES,WAAb,EAAnB;AAEA,aAAOD,QAAQ,CAACG,QAAT,CAAkBD,UAAlB,CAAP;AACD,KANe,CAAhB;AAOD;;AAED,QAAME,aAAa,GAAInB,IAAD,IAAU;AAE9B,UAAMoB,SAAS,GAAGhB,KAAK,CAACiB,SAAN,CAAgBV,IAAI,IAAIA,IAAI,CAACX,IAAL,IAAaA,IAArC,CAAlB;AAEA,UAAMsB,QAAQ,GAAG,CAAC,GAAGlB,KAAJ,CAAjB;AACAkB,IAAAA,QAAQ,CAACF,SAAD,CAAR,CAAoBnB,SAApB,GAAgC,IAAhC;AACAI,IAAAA,QAAQ,CAACiB,QAAD,CAAR;AACD,GAPD;;AAUA,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,4BACG,QAAC,WAAD;AACE,MAAA,KAAK,EAAET,UADT;AAEE,MAAA,SAAS,EAAEJ;AAFb;AAAA;AAAA;AAAA;AAAA,YADH,eAKG,QAAC,UAAD;AACE,MAAA,WAAW,EAAEF,WADf;AAEE,MAAA,cAAc,EAAEC;AAFlB;AAAA;AAAA;AAAA;AAAA,YALH,eAWG,QAAC,QAAD;AAAA,gBACGM,aAAa,CAACS,GAAd,CAAkBZ,IAAI,iBACrB,QAAC,QAAD;AAEA,QAAA,IAAI,EAAEA,IAAI,CAACX,IAFX;AAGA,QAAA,SAAS,EAAEW,IAAI,CAACV;AAHhB,SACKU,IAAI,CAACX,IADV;AAAA;AAAA;AAAA;AAAA,cADqB,CAKrB;AALD;AADH;AAAA;AAAA;AAAA;AAAA,YAXH,eAqBG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YArBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0BD;;GA3DQE,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport {TodoCounter} from './TodoCounter';\nimport {TodoSearch} from './TodoSearch';\nimport {TodoList} from './TodoList';\nimport {TodoItem} from './TodoItem';\nimport {CreateTodoButton} from './CreateTodoButton';\n\n//import './App.css';\n\nconst defaultTodos = [\n  {text: 'Cortar cebolla', completed: true},\n  {text: 'Tomar curso', completed: false},\n  {text: 'Correr', completed: false}\n];\n\n\nfunction App(props) {\n\n  const [todos, setTodos] = React.useState(defaultTodos)\n  const [searchValue, setSearchValue] = React.useState('') // esto me permite darle un estado. El array recibe un valor y tambien una funcion para setear el valor\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if(!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n\n    searchedTodos = todos.filter( todo => {\n\n      const todoText = todo.text. toLowerCase()\n      const searchText = searchValue. toLowerCase()\n      \n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodos = (text) => {\n\n    const todoIndex = todos.findIndex(todo => todo.text == text);\n  \n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    setTodos(newTodos);\n  };\n\n\n  return (\n   <React.Fragment>\n      <TodoCounter \n        total={totalTodos}\n        completed={completedTodos}\n      />\n      <TodoSearch \n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n      />\n      \n\n      <TodoList>\n        {searchedTodos.map(todo => (\n          <TodoItem \n          key={todo.text} \n          text={todo.text}\n          completed={todo.completed}/> \n          //cuando renderizo distintos elementos dentro de un componente, React necesita que le agregue una key a esos componentes, que es la parte que va a cambiar entre uno y otro\n        ))}\n      </TodoList>\n\n      <CreateTodoButton />\n      \n   </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}